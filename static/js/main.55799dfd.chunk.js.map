{"version":3,"sources":["images/delete.png","components/Column/Column.js","components/Delete/Delete.js","components/Card/Card.js","components/Header/Header.js","components/AddColumn/AddColumn.js","components/Button/Button.js","components/AddField/AddField.js","index.js"],"names":["module","exports","Column","props","draggableId","id","toString","index","provided","className","draggableProps","dragHandleProps","ref","innerRef","children","Delete","src","require","alt","onClick","deleteItem","Card","columnId","value","Header","useState","headerText","deleteColumn","AddColumn","show","showSet","header","headerSet","clickHandler","type","placeholder","onChange","e","target","trim","addColumn","buttonText","panelText","Button","createNewTodo","AddField","text","textSet","Temporary","counter","Trello","items","itemsSet","useEffect","onDragEnd","result","destination","source","droppableId","newItems","Array","from","splice","Number","slice","map","curr","start","finish","startTodos","todos","startUpd","finishTodos","finishUpd","val","newTodos","direction","droppableProps","key","tmp","filter","i","length","newTodo","push","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55799dfd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/delete.a6a3615c.png\";","import React from 'react';\r\nimport { Draggable } from 'react-beautiful-dnd'; \r\nimport './Column.css';\r\n\r\nfunction Column(props) {\r\n        return (\r\n            <Draggable draggableId={'column' + props.id.toString()} index={props.index}>\r\n                {provided => (\r\n                    <div className=\"column\" {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\r\n                        {props.children}\r\n                    </div>\r\n                )}\r\n            </Draggable>    \r\n        );\r\n}\r\n\r\nexport default Column;","import React from 'react';\r\nimport './Delete.css';\r\n\r\nfunction Delete(props) {\r\n    return ( \r\n        <div className=\"delete\">\r\n            <img src={require(\"../../images/delete.png\")} alt=\"delete\" onClick={() => props.deleteItem()}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Delete;","import React from 'react';\r\nimport Delete from '../Delete/Delete';\r\nimport { Draggable } from 'react-beautiful-dnd'; \r\nimport './Card.css';\r\n\r\nfunction Card(props) {\r\n    return (\r\n        <Draggable draggableId={props.columnId.toString() + 'card' + props.id.toString()} index={props.index}>\r\n            {(provided) => (\r\n                <div className=\"card\" {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\r\n                    {props.value}\r\n                    <Delete deleteItem={() => props.deleteItem(props.id,props.columnId)}/>\r\n                </div>\r\n            )}\r\n        </Draggable>    \r\n    );\r\n}\r\n\r\nexport default Card;","import React, { useState } from 'react';\r\nimport Delete from '../Delete/Delete';\r\nimport './Header.css';\r\n\r\nfunction Header(props){\r\n    const [headerText, headerTextSet] = useState(props.value);\r\n    \r\n    return(\r\n        <div className=\"header\">\r\n            {\r\n                <div className=\"header__Text\">\r\n                    <h3>{headerText}</h3>\r\n                </div>\r\n            }\r\n            <Delete deleteItem={() => props.deleteColumn(props.columnId)}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React,{ useState } from 'react';\r\nimport \"./AddColumn.css\";\r\n\r\nfunction AddColumn(props) {\r\n    const [show, showSet] = useState(false);\r\n    const [header, headerSet] = useState(' ');\r\n\r\n    function changeHandler(e) {\r\n        headerSet(e.target.value);\r\n    }\r\n\r\n    function clickHandler() {\r\n        show ?\r\n            showSet(false)\r\n        :\r\n            showSet(true)\r\n    } \r\n\r\n    return(\r\n        show ?\r\n            <div className=\"columnAddNotHidden\">\r\n                <input type=\"text\" placeholder=\"Enter column title\" onChange={changeHandler}/>\r\n                <div className=\"columnAddNotHidden-flexbox\">\r\n                    <button onClick={() => {\r\n                        if (header.trim() !== '') \r\n                            {\r\n                                props.addColumn(header)\r\n                            }\r\n                        }}>\r\n                        {props.buttonText}\r\n                    </button>\r\n                    <div className=\"columnAddNotHidden-flexbox-buttonX\" onClick={() => clickHandler()}>\r\n                        X\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        :\r\n            <div className=\"columnAddHidden\" onClick={() => clickHandler()}>\r\n                {props.panelText}\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default AddColumn;","import React from 'react';\r\nimport './Button.css';\r\n\r\nfunction Button(props) {\r\n    return (\r\n        <div className=\"button\">\r\n            <button onClick={() => props.createNewTodo()}>\r\n                {props.value}\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Button;","import React, { useState } from 'react';\r\nimport Button from '../Button/Button';\r\n\r\nimport './AddField.css';\r\n\r\nfunction AddField(props) {\r\n    const [show, showSet] = useState(false);\r\n    const [text, textSet] = useState('');\r\n\r\n    function clickHandler() {\r\n        show ?\r\n            showSet(false)\r\n        :\r\n            showSet(true)\r\n    }\r\n\r\n    function changeHandler(e) {\r\n        textSet(e.target.value);\r\n    }\r\n    \r\n    return (\r\n        show ?\r\n            <div className=\"column-hiddenDescription\">\r\n                <textarea onChange={changeHandler} placeholder=\"Type your text here...\"></textarea>\r\n                <div className=\"column-hiddenDescription-flexbox\">\r\n                    <Button value={props.buttonText} createNewTodo={() => {\r\n                        if(text.trim() !== '') \r\n                            {\r\n                                props.createNewTodo(text)\r\n                            }\r\n                    }}/>\r\n                    <div className=\"column-hiddenDescription-flexbox-button\" onClick={() => clickHandler()}>\r\n                        X\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        :\r\n            <div className=\"column-addCard\" onClick={() => clickHandler()}>\r\n                {props.panelText}\r\n            </div>\r\n    );\r\n}\r\nexport default AddField;","import React, { useState,useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Column from './components/Column/Column';\r\nimport Card from './components/Card/Card';\r\nimport Header from './components/Header/Header';\r\nimport AddColumn from './components/AddColumn/AddColumn';\r\nimport AddField from './components/AddField/AddField';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'; \r\nimport './index.css';\r\n\r\n//I really don't know how to fix it other way. :( \r\nlet Temporary = [];\r\nlet counter = 0; \r\n//forgive me lord, for I have sinned.\r\n\r\nfunction Trello(){\r\n    \r\n    const [items, itemsSet] = useState([]);\r\n   \r\n    useEffect(() => {\r\n      itemsSet(Temporary);\r\n    }, [counter]);\r\n\r\n    function addItem(newTodo, columnId){\r\n      itemsSet(items.map(val => {\r\n        if (val.columnId === columnId) {\r\n          val.todos.push({\r\n            text: newTodo,\r\n            id: Number(val.todos.length + 1)\r\n          })\r\n        }\r\n        return val;\r\n      }));\r\n    }\r\n\r\n    function addColumn(header) {\r\n      let tmp = [...items,\r\n        {\r\n          header: header,\r\n          todos: [],\r\n          columnId: Number(items.length + 1)\r\n        }\r\n      ];\r\n\r\n      tmp = tmp.map((curr, index) => {\r\n        return {...curr, columnId: Number(index+1)}\r\n      });\r\n\r\n      itemsSet(tmp);\r\n    }\r\n\r\n    function deleteItem(id, columnId){   //couldn't implement no loop solution\r\n      let tmp = [...items];             //future me,please do ;)\r\n      for (let i = 0; i<tmp.length; i++) {\r\n        if (tmp[i].columnId === columnId) {\r\n          tmp[i].todos = tmp[i].todos.filter(curr => curr.id !== id);\r\n        }   \r\n      }\r\n\r\n      tmp = tmp.map(curr =>\r\n        {\r\n          if (curr.columnId === columnId) {\r\n            return(\r\n              {\r\n                ...curr,\r\n                todos: curr.todos.map((val, index) => {\r\n                  return ({\r\n                    ...val,\r\n                    id: Number(index + 1) \r\n                  })\r\n                })\r\n              }\r\n            );}\r\n            else {\r\n              return curr;\r\n            } \r\n        })\r\n     itemsSet(tmp);\r\n    }\r\n\r\n    function deleteColumn(columnId) {\r\n       let tmp = items.filter((val, index) => {\r\n        if (val.columnId !== columnId) return {...val, columnId: Number(index + 1)};\r\n      });\r\n\r\n      itemsSet(tmp);\r\n    }\r\n\r\n    //drag and drop\r\n    function onDragEnd(result) {\r\n      const {destination, source, draggableId, type} = result;\r\n\r\n      if (!destination) return;\r\n      \r\n      if (destination.droppableId === source.droppableId && destination.index === source.index) return;\r\n\r\n      if (type === 'column') {\r\n        const newItems = Array.from(items);\r\n        newItems.splice(source.index, 1);\r\n        newItems.splice(destination.index, 0, items[Number(draggableId.slice(6)) - 1]);\r\n      \r\n          Temporary = newItems.map((curr, index) => {\r\n            return {\r\n              ...curr,\r\n              columnId: Number(index+1)\r\n            };\r\n          });\r\n\r\n          itemsSet([]);\r\n         \r\n          counter++;\r\n        return;\r\n      }\r\n\r\n     //columns\r\n      const start = items[Number(source.droppableId) - 1]; \r\n      const finish = items[Number(destination.droppableId)- 1]; \r\n\r\n      if (start === finish) {\r\n        const newTodos = Array.from(start.todos);\r\n        \r\n        newTodos.splice(source.index, 1);\r\n        newTodos.splice(destination.index, 0, start.todos[Number(draggableId.slice(5)) - 1]);\r\n        \r\n        start.todos = newTodos.map((curr, index) => \r\n          {\r\n            return {\r\n              ...curr,\r\n              id:Number(index + 1),\r\n            }\r\n          }  \r\n        );\r\n\r\n        const newItems = items.map(curr => {\r\n          if (curr.columnId === start.columnId) {\r\n            return start;\r\n          }\r\n          else {\r\n            return curr;\r\n          }\r\n        })\r\n  \r\n        itemsSet(newItems);\r\n        return;\r\n      }\r\n\r\n      //start column changes\r\n      const startTodos = Array.from(start.todos);\r\n      startTodos.splice(source.index, 1);\r\n\r\n      //sort todos in a start column\r\n      const startUpd = \r\n        {\r\n          ...start,\r\n          todos: startTodos.map((curr, index) => {\r\n            return {...curr, id: Number(index + 1)} \r\n          })\r\n        }\r\n      \r\n      //finish column changes\r\n      const finishTodos = Array.from(finish.todos);\r\n      finishTodos.splice(destination.index, 0, start.todos[Number(draggableId.slice(5)) - 1]); \r\n\r\n      //sort todos in a finish column\r\n      const finishUpd = \r\n        {\r\n          ...finish,\r\n          todos: finishTodos.map((curr, index) => {\r\n            return {...curr, id: Number(index + 1)}  \r\n          })\r\n        }\r\n        \r\n      itemsSet(items.map((val, index) => {\r\n        if (index === Number(source.droppableId) - 1) { \r\n          return startUpd;\r\n        }\r\n        if (index === Number(destination.droppableId) - 1) { \r\n          return finishUpd;\r\n        }\r\n        else {\r\n          return val;\r\n        }\r\n      }));\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n          <DragDropContext onDragEnd={onDragEnd}>\r\n            <Droppable droppableId = \"smpl\" direction=\"horizontal\" type=\"column\">\r\n              {provided => (\r\n                <div className=\"container\" {...provided.droppableProps} ref={provided.innerRef}>\r\n                {items.map((curr, index) =>\r\n                  (\r\n                      <Column key={curr.columnId} id={curr.columnId} index={index}>   \r\n                        <Header value={curr.header} columnId={curr.columnId} deleteColumn={(columnId) => deleteColumn(columnId)}/>\r\n                        <Droppable droppableId={curr.columnId.toString()} type=\"task\">\r\n                          {provided => (\r\n                            <div className=\"overflowCards\" ref={provided.innerRef} {...provided.droppableProps}>\r\n                              {curr.todos.map((val, index) => \r\n                                (<Card key={val.id} value={val.text} id={val.id} index={index} columnId={curr.columnId} deleteItem={(id, columnId) => deleteItem(id, columnId)}/>)       \r\n                              )}\r\n                              {provided.placeholder}\r\n                            </div>\r\n                          )}\r\n                        </Droppable>\r\n                        <AddField createNewTodo={(text)=> addItem(text, curr.columnId)} buttonText=\"Add Card\" panelText=\"+ Add a card\"/>\r\n                      </Column>\r\n                ))}\r\n                {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>  \r\n          </DragDropContext>    \r\n            <AddColumn buttonText=\"Add Column\" panelText=\"+ Add a column\" addColumn={(header) => addColumn(header)}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Trello />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}